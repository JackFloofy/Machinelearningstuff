# -*- coding: utf-8 -*-
"""Student Trains Machine Learning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bq0Tad5RxbrLcFoUR42TXjboJFEsqhpk
"""

import pandas as pd
data = pd.read_csv('student_train.csv')

data.head()

data.dtypes

from sklearn.preprocessing import LabelEncoder
categorical_cols = data.select_dtypes(include=['object']).columns

label_encoders = {}

for col in categorical_cols:
    label_encoders[col] = LabelEncoder()
    data[col] = label_encoders[col].fit_transform(data[col])

data.isna().sum()

x= data.iloc[:, [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]].values #data/ informasi untuk memprediksi apakah sesorang terindikasi diabetes atau tidak
y= data.iloc[:, [19]].values  #yang ingin kita prediksi

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0)
classifier.fit(x_train, y_train)

from sklearn.neighbors import KNeighborsClassifier
model_classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)
model_classifier.fit(x_train, y_train.ravel())

y_pred_2 = model_classifier.predict(x_test)

from sklearn.metrics import confusion_matrix, accuracy_score
accuracy_score(y_test, y_pred_2)

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = classifier.predict(x_test)
accuracy_score(y_test, y_pred)